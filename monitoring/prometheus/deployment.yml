---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      initContainers:
        - name: ipworward
          image: busybox
          command: ["/bin/sh"]
          args:
            - -c
            - sysctl -w net.ipv4.ip_forward=1 net.ipv6.conf.all.forwarding=1
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
          securityContext:
            privileged: true
      containers:
        - name: prometheus
          image: prom/prometheus
          command:
            - /bin/prometheus
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--web.console.libraries=/usr/share/prometheus/console_libraries"
            - "--web.console.templates=/usr/share/prometheus/consoles"
            - "--web.config.file=/etc/prometheus/web_config.yml"
          ports:
            - containerPort: 9090
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 15
            successThreshold: 1
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTPS
            timeoutSeconds: 2
          resources:
            requests:
              cpu: 37m
              memory: 768Mi
            limits:
              memory: 768Mi
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
            - name: config-volume
              mountPath: /etc/prometheus/web_config.yml
              subPath: web_config.yml
            - name: data-volume
              mountPath: /prometheus
            - name: tls-crt
              mountPath: /etc/prometheus/tls
        - name: sidecar-tailscale
          image: tailscale/tailscale
          imagePullPolicy: Always
          env:
            - name: TS_KUBE_SECRET
              value: tailscale-auth
            - name: TS_USERSPACE
              value: "false"
            - name: TS_AUTHKEY
              valueFrom:
                secretKeyRef:
                  name: tailscale-auth
                  key: TS_AUTHKEY
                  optional: true
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
            limits:
              memory: 100Mi
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
      volumes:
        - name: config-volume
          configMap:
            defaultMode: 420
            name: prometheus-config
        - name: data-volume
          persistentVolumeClaim:
            claimName: prometheus-pvc
        - name: tls-crt
          secret:
            secretName: prometheus.k8s.reiciunas.dev
